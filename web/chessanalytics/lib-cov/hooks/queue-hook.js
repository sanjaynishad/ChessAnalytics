/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['hooks/queue-hook.js']) {
  _$jscoverage['hooks/queue-hook.js'] = [];
  _$jscoverage['hooks/queue-hook.js'][1] = 0;
  _$jscoverage['hooks/queue-hook.js'][6] = 0;
  _$jscoverage['hooks/queue-hook.js'][7] = 0;
  _$jscoverage['hooks/queue-hook.js'][10] = 0;
  _$jscoverage['hooks/queue-hook.js'][12] = 0;
  _$jscoverage['hooks/queue-hook.js'][13] = 0;
  _$jscoverage['hooks/queue-hook.js'][15] = 0;
  _$jscoverage['hooks/queue-hook.js'][16] = 0;
  _$jscoverage['hooks/queue-hook.js'][17] = 0;
  _$jscoverage['hooks/queue-hook.js'][25] = 0;
  _$jscoverage['hooks/queue-hook.js'][26] = 0;
  _$jscoverage['hooks/queue-hook.js'][27] = 0;
  _$jscoverage['hooks/queue-hook.js'][30] = 0;
  _$jscoverage['hooks/queue-hook.js'][31] = 0;
  _$jscoverage['hooks/queue-hook.js'][33] = 0;
  _$jscoverage['hooks/queue-hook.js'][34] = 0;
  _$jscoverage['hooks/queue-hook.js'][35] = 0;
  _$jscoverage['hooks/queue-hook.js'][39] = 0;
}
_$jscoverage['hooks/queue-hook.js'][1]++;
var GenericHook = require("./generic-hook"), analyser = require("./../analyser").analyser, queue_manager = require("./../queue-manager").queue_manager;
_$jscoverage['hooks/queue-hook.js'][6]++;
var QueueHook = (function () {
  _$jscoverage['hooks/queue-hook.js'][7]++;
  this.ctor();
});
_$jscoverage['hooks/queue-hook.js'][10]++;
QueueHook.prototype = GenericHook.prototype;
_$jscoverage['hooks/queue-hook.js'][12]++;
QueueHook.prototype.set_data = (function () {
  _$jscoverage['hooks/queue-hook.js'][13]++;
  var self = this;
  _$jscoverage['hooks/queue-hook.js'][15]++;
  queue_manager.in_queue((function (err, count) {
  _$jscoverage['hooks/queue-hook.js'][16]++;
  queue_manager.get_next(6, (function (err, games) {
  _$jscoverage['hooks/queue-hook.js'][17]++;
  self.last_data = {games: games, count: count};
}));
}));
});
_$jscoverage['hooks/queue-hook.js'][25]++;
QueueHook.prototype.send_to_client = (function (client, data) {
  _$jscoverage['hooks/queue-hook.js'][26]++;
  if (! data) {
    _$jscoverage['hooks/queue-hook.js'][26]++;
    data = this.last_data;
  }
  _$jscoverage['hooks/queue-hook.js'][27]++;
  client.emit("queue", data.games, data.count);
});
_$jscoverage['hooks/queue-hook.js'][30]++;
QueueHook.prototype.listen = (function () {
  _$jscoverage['hooks/queue-hook.js'][31]++;
  var self = this;
  _$jscoverage['hooks/queue-hook.js'][33]++;
  analyser.emitter.on("analysis_started", (function (data) {
  _$jscoverage['hooks/queue-hook.js'][34]++;
  self.set_data();
  _$jscoverage['hooks/queue-hook.js'][35]++;
  self.send(self.last_data);
}));
});
_$jscoverage['hooks/queue-hook.js'][39]++;
module.exports = QueueHook;
_$jscoverage['hooks/queue-hook.js'].source = ["var GenericHook = require('./generic-hook'),","\tanalyser = require('./../analyser').analyser,","\tqueue_manager = require('./../queue-manager').queue_manager;","","","var QueueHook = function(){","\tthis.ctor();","};","","QueueHook.prototype = GenericHook.prototype;","","QueueHook.prototype.set_data = function(){","\tvar self = this;","","\tqueue_manager.in_queue(function(err, count){","\t\tqueue_manager.get_next(6, function(err, games){","\t\t\tself.last_data = { ","\t\t\t\tgames: games,","\t\t\t\tcount: count ","\t\t\t};","\t\t});","\t});","};","","QueueHook.prototype.send_to_client = function(client, data){","\tif(!data){ data = this.last_data; }","\tclient.emit('queue', data.games, data.count);","};","","QueueHook.prototype.listen = function(){","\tvar self = this;","","\tanalyser.emitter.on('analysis_started', function(data){","\t\tself.set_data();","\t\tself.send(self.last_data);","\t});","};","","module.exports = QueueHook;"];
