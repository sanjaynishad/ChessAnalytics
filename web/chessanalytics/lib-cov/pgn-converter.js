/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['pgn-converter.js']) {
  _$jscoverage['pgn-converter.js'] = [];
  _$jscoverage['pgn-converter.js'][57] = 0;
  _$jscoverage['pgn-converter.js'][63] = 0;
  _$jscoverage['pgn-converter.js'][64] = 0;
  _$jscoverage['pgn-converter.js'][65] = 0;
  _$jscoverage['pgn-converter.js'][67] = 0;
  _$jscoverage['pgn-converter.js'][69] = 0;
  _$jscoverage['pgn-converter.js'][70] = 0;
  _$jscoverage['pgn-converter.js'][71] = 0;
  _$jscoverage['pgn-converter.js'][72] = 0;
  _$jscoverage['pgn-converter.js'][75] = 0;
  _$jscoverage['pgn-converter.js'][76] = 0;
  _$jscoverage['pgn-converter.js'][77] = 0;
  _$jscoverage['pgn-converter.js'][79] = 0;
  _$jscoverage['pgn-converter.js'][80] = 0;
  _$jscoverage['pgn-converter.js'][81] = 0;
  _$jscoverage['pgn-converter.js'][85] = 0;
  _$jscoverage['pgn-converter.js'][86] = 0;
  _$jscoverage['pgn-converter.js'][87] = 0;
  _$jscoverage['pgn-converter.js'][89] = 0;
  _$jscoverage['pgn-converter.js'][90] = 0;
  _$jscoverage['pgn-converter.js'][94] = 0;
  _$jscoverage['pgn-converter.js'][95] = 0;
  _$jscoverage['pgn-converter.js'][96] = 0;
  _$jscoverage['pgn-converter.js'][98] = 0;
  _$jscoverage['pgn-converter.js'][99] = 0;
  _$jscoverage['pgn-converter.js'][103] = 0;
  _$jscoverage['pgn-converter.js'][104] = 0;
  _$jscoverage['pgn-converter.js'][105] = 0;
  _$jscoverage['pgn-converter.js'][108] = 0;
  _$jscoverage['pgn-converter.js'][109] = 0;
  _$jscoverage['pgn-converter.js'][112] = 0;
  _$jscoverage['pgn-converter.js'][113] = 0;
  _$jscoverage['pgn-converter.js'][114] = 0;
  _$jscoverage['pgn-converter.js'][115] = 0;
  _$jscoverage['pgn-converter.js'][116] = 0;
  _$jscoverage['pgn-converter.js'][118] = 0;
  _$jscoverage['pgn-converter.js'][121] = 0;
  _$jscoverage['pgn-converter.js'][124] = 0;
  _$jscoverage['pgn-converter.js'][125] = 0;
  _$jscoverage['pgn-converter.js'][126] = 0;
  _$jscoverage['pgn-converter.js'][128] = 0;
  _$jscoverage['pgn-converter.js'][129] = 0;
  _$jscoverage['pgn-converter.js'][131] = 0;
  _$jscoverage['pgn-converter.js'][132] = 0;
  _$jscoverage['pgn-converter.js'][133] = 0;
  _$jscoverage['pgn-converter.js'][135] = 0;
  _$jscoverage['pgn-converter.js'][136] = 0;
  _$jscoverage['pgn-converter.js'][137] = 0;
}
_$jscoverage['pgn-converter.js'][57]++;
var spawn = require("child_process").spawn, fs = require("fs"), util = require("util"), winston = require("winston"), emitter = require("events").EventEmitter;
_$jscoverage['pgn-converter.js'][63]++;
var triggers = {};
_$jscoverage['pgn-converter.js'][64]++;
triggers.exit = "exit";
_$jscoverage['pgn-converter.js'][65]++;
triggers.converted = "converted";
_$jscoverage['pgn-converter.js'][67]++;
TMP_FILE = "/tmp/tmp_game%s.pgn";
_$jscoverage['pgn-converter.js'][69]++;
var PGNConverter = module.exports.PGNConverter = (function () {
  _$jscoverage['pgn-converter.js'][70]++;
  this.emitter = new emitter();
  _$jscoverage['pgn-converter.js'][71]++;
  this.metadata = {};
  _$jscoverage['pgn-converter.js'][72]++;
  this.gamedata = [];
});
_$jscoverage['pgn-converter.js'][75]++;
PGNConverter.prototype.convert_file_helper = (function (args) {
  _$jscoverage['pgn-converter.js'][76]++;
  var self = this;
  _$jscoverage['pgn-converter.js'][77]++;
  self.spawn = spawn("pgn-extract", args);
  _$jscoverage['pgn-converter.js'][79]++;
  self.spawn.on("exit", (function (code) {
  _$jscoverage['pgn-converter.js'][80]++;
  winston.info("PGN Converter exited!");
  _$jscoverage['pgn-converter.js'][81]++;
  self.emitter.emit(triggers.exit);
}));
});
_$jscoverage['pgn-converter.js'][85]++;
PGNConverter.prototype.convert_file = (function (pgn_file) {
  _$jscoverage['pgn-converter.js'][86]++;
  var self = this;
  _$jscoverage['pgn-converter.js'][87]++;
  self.convert_file_helper(["-Wlalg", "-C", "-N", "-V", pgn_file]);
  _$jscoverage['pgn-converter.js'][89]++;
  self.spawn.stdout.on("data", (function (data) {
  _$jscoverage['pgn-converter.js'][90]++;
  self.parse_response(data.toString().split("\n"));
}));
});
_$jscoverage['pgn-converter.js'][94]++;
PGNConverter.prototype.strip_file = (function (pgn_file) {
  _$jscoverage['pgn-converter.js'][95]++;
  var self = this;
  _$jscoverage['pgn-converter.js'][96]++;
  self.convert_file_helper(["-C", "-N", "-V", pgn_file]);
  _$jscoverage['pgn-converter.js'][98]++;
  self.spawn.stdout.on("data", (function (data) {
  _$jscoverage['pgn-converter.js'][99]++;
  self.emitter.emit(triggers.converted, data.toString());
}));
});
_$jscoverage['pgn-converter.js'][103]++;
PGNConverter.prototype.add_metadata = (function (line) {
  _$jscoverage['pgn-converter.js'][104]++;
  var arr = line.slice(1, line.length - 1).split(" ");
  _$jscoverage['pgn-converter.js'][105]++;
  this.metadata[arr[0]] = arr.slice(1, arr.length).join(" ").replace(/\"/g, "");
  _$jscoverage['pgn-converter.js'][105]++;
  ;
});
_$jscoverage['pgn-converter.js'][108]++;
PGNConverter.prototype.add_to_game = (function (line) {
  _$jscoverage['pgn-converter.js'][109]++;
  if (line) {
    _$jscoverage['pgn-converter.js'][109]++;
    this.gamedata = this.gamedata.concat(line.split(" "));
  }
});
_$jscoverage['pgn-converter.js'][112]++;
PGNConverter.prototype.parse_response = (function (lines) {
  _$jscoverage['pgn-converter.js'][113]++;
  var i;
  _$jscoverage['pgn-converter.js'][114]++;
  for (i = 0; i < lines.length; i++) {
    _$jscoverage['pgn-converter.js'][115]++;
    if (lines[i][0] === "[") {
      _$jscoverage['pgn-converter.js'][116]++;
      this.add_metadata(lines[i]);
    }
    else {
      _$jscoverage['pgn-converter.js'][118]++;
      this.add_to_game(lines[i]);
    }
}
  _$jscoverage['pgn-converter.js'][121]++;
  this.emitter.emit(triggers.converted, {gamedata: this.gamedata, metadata: this.metadata});
});
_$jscoverage['pgn-converter.js'][124]++;
PGNConverter.prototype.convert_helper = (function (string) {
  _$jscoverage['pgn-converter.js'][125]++;
  var suffix = new Date().getTime();
  _$jscoverage['pgn-converter.js'][126]++;
  var file_name = util.format(TMP_FILE, suffix);
  _$jscoverage['pgn-converter.js'][128]++;
  fs.writeFileSync(file_name, new Buffer(string));
  _$jscoverage['pgn-converter.js'][129]++;
  return file_name;
});
_$jscoverage['pgn-converter.js'][131]++;
PGNConverter.prototype.convert = (function (string) {
  _$jscoverage['pgn-converter.js'][132]++;
  file_name = this.convert_helper(string);
  _$jscoverage['pgn-converter.js'][133]++;
  this.convert_file(file_name);
});
_$jscoverage['pgn-converter.js'][135]++;
PGNConverter.prototype.strip = (function (string) {
  _$jscoverage['pgn-converter.js'][136]++;
  file_name = this.convert_helper(string);
  _$jscoverage['pgn-converter.js'][137]++;
  this.strip_file(file_name);
});
_$jscoverage['pgn-converter.js'].source = ["/* PNG Converter","","This driver requires pgn-extract to be installed and in the path.","","Download PGN Extract from http://www.cs.kent.ac.uk/people/staff/djb/pgn-extract/","","Example usage:","","1. Convert file example","//create a new converter object","var pgn_converter = new PGNConverter();","","//listen for when the conversion has been finished","pgn_converter.emitter.on('converted', function(data){","\tconsole.log(data);","});","","//convert a file","pgn_converter.convert_file('lib/game.pgn');","","","2. Convert string example","var pgn_converter = new PGNConverter();","pgn_converter.emitter.on('converted', function(data){","\tconsole.log(data);","});","pgn_converter.convert('1.e4 c5 2.c4 Nc6 3.d3 e5 4.Be2 Nf6 5.Nc3 d6 6.f4 exf4 7.Bxf4 Be7 8.Nf3 O-O 9.O-O Bg4 10.h3 Bh5 11.Nd5 Bxf3 12.Bxf3 Nd4 13.Be3 Nxf3+ 14.Rxf3 Nxd5 15.cxd5 Bg5 16.Qd2 Bxe3+ 17.Qxe3 f6 18.Rg3 Qe7 19.Rf1 Qe5 20.b3 a521.Rf5 Qa1+ 22.Kh2 b6 23.Rh5 g6 24.Qh6 Ra7 25.Qf4 Qxa2 26.Qxd6 Qxb3 27.d4 Qb4 28.dxc5 Qxc5 29.Qe6+ Rff7 30.e5 Rae7');","","","Public Attributes:","\tpgn_converter.emitter","\t\tEvent Emitter for pgn_converter events","","Triggers:","\t'converted'","\t\tWhen: the pgn file has been converted","\t\tData: ","\t\t\tgamedata: a list of the moves","\t\t\tmetadata: a key value pair of the metadata","","\t'exit'","\t\tWhen: the pgn_converter has exited","\t\tData: null","","Public Methods:","\tconvert_file(file_name):","\t\tCalled with a file name","\t\tExample: pgn_converter.convert_file('lib/game.pgn')","\t\tTriggers: 'converted'","","\tconvert(string):","\t\tCalled with a text string","\t\tExample: pgn_converter.convert('lib/game.pgn')","\t\tTriggers: 'converted'","*/","","var spawn = require('child_process').spawn,","\tfs = require('fs'),","\tutil = require('util'),","\twinston = require('winston'),","\temitter = require('events').EventEmitter;","","var triggers={};","triggers.exit = 'exit';","triggers.converted = 'converted';","","TMP_FILE = '/tmp/tmp_game%s.pgn';","","var PGNConverter = module.exports.PGNConverter = function(){","\tthis.emitter = new emitter();","\tthis.metadata = {};","\tthis.gamedata = [];","};","","PGNConverter.prototype.convert_file_helper = function(args){","\tvar self = this;","\tself.spawn = spawn('pgn-extract', args);","\t","\tself.spawn.on('exit', function (code) {","\t\twinston.info('PGN Converter exited!');","\t\tself.emitter.emit(triggers.exit);","\t});","};","","PGNConverter.prototype.convert_file = function(pgn_file){","\tvar self = this;","\tself.convert_file_helper(['-Wlalg', '-C', '-N', '-V', pgn_file]);","","\tself.spawn.stdout.on('data', function(data){","\t\tself.parse_response(data.toString().split('\\n'));","\t});","};","","PGNConverter.prototype.strip_file = function(pgn_file){","\tvar self = this;","\tself.convert_file_helper(['-C', '-N', '-V', pgn_file]);","","\tself.spawn.stdout.on('data', function(data){","\t\tself.emitter.emit(triggers.converted, data.toString());","\t});","};","","PGNConverter.prototype.add_metadata = function(line){","\tvar arr = line.slice(1, line.length-1).split(' ');","\tthis.metadata[arr[0]] = arr.slice(1, arr.length).join(' ').replace(/\\\"/g,'');;","};","","PGNConverter.prototype.add_to_game = function(line){","\tif(line){ this.gamedata = this.gamedata.concat(line.split(' ')); }","};","","PGNConverter.prototype.parse_response = function(lines){","\tvar i;","\tfor(i=0; i&lt;lines.length; i++){","\t\tif(lines[i][0] === '['){","\t\t\tthis.add_metadata(lines[i]);","\t\t}else{","\t\t\tthis.add_to_game(lines[i]);","\t\t}","\t}","\tthis.emitter.emit(triggers.converted, {gamedata: this.gamedata, metadata: this.metadata});","};","","PGNConverter.prototype.convert_helper = function(string){","\tvar suffix = new Date().getTime();","\tvar file_name = util.format(TMP_FILE, suffix);","","\tfs.writeFileSync(file_name, new Buffer(string));","\treturn file_name;","};","PGNConverter.prototype.convert = function(string){","\tfile_name = this.convert_helper(string);","\tthis.convert_file(file_name);","};","PGNConverter.prototype.strip = function(string){","\tfile_name = this.convert_helper(string);","\tthis.strip_file(file_name);","};","/*","var pgn_converter = new PGNConverter();","pgn_converter.emitter.on('converted', function(data){","\tconsole.log(data);","});","pgn_converter.convert('1.e4 c5 2.c4 Nc6 3.d3 e5 4.Be2 Nf6 5.Nc3 d6 6.f4 exf4 7.Bxf4 Be7 8.Nf3 O-O 9.O-O Bg4 10.h3 Bh5 11.Nd5 Bxf3 12.Bxf3 Nd4 13.Be3 Nxf3+ 14.Rxf3 Nxd5 15.cxd5 Bg5 16.Qd2 Bxe3+ 17.Qxe3 f6 18.Rg3 Qe7 19.Rf1 Qe5 20.b3 a521.Rf5 Qa1+ 22.Kh2 b6 23.Rh5 g6 24.Qh6 Ra7 25.Qf4 Qxa2 26.Qxd6 Qxb3 27.d4 Qb4 28.dxc5 Qxc5 29.Qe6+ Rff7 30.e5 Rae7');","*/","/*","var pgn_converter = new PGNConverter();","pgn_converter.convert_file('lib/tehrani_bm_vs_theramparts_2012_08_02.pgn');","pgn_converter.emitter.on('converted', function(data){","\tconsole.log(data);","});","*/"];
